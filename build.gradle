buildscript {
    dependencies {
        classpath "org.flywaydb:flyway-mysql:8.2.2"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "9.4.0"
}

group = 'gfa'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.4'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'com.auth0:java-jwt:4.1.0'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation "org.flywaydb:flyway-sqlserver"
    implementation "org.flywaydb:flyway-mysql"
    implementation 'org.flywaydb:flyway-mysql:9.4.0'
    implementation "org.flywaydb:flyway-core:9.4.0"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2:2.1.214'
}

def props = new Properties()
file(".env").withInputStream { props.load(it) }
flyway {
    driver = 'com.mysql.cj.jdbc.Driver'
    url = props.getProperty("DB_URL")
    user = props.getProperty("DB_USERNAME")
    password = props.getProperty("DB_PASSWORD")
    schemas = 'Homework'
    cleanDisabled = false
}


tasks.named('test') {
    useJUnitPlatform()
}